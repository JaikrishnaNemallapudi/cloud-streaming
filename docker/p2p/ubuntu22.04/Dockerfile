# Copyright (C) 2020-2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0


# This file is automatically generated from .m4 template.
# To update, modify the template and regenerate.

ARG IMAGE=ubuntu:22.04
FROM $IMAGE AS base

FROM base as build

RUN mkdir -p /opt/build && mkdir -p /opt/dist

ENV PKG_CONFIG_PATH=/opt/lib/pkgconfig

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ca-certificates \
    wget && \
  rm -rf /var/lib/apt/lists/*
ARG OWT_REPO=https://github.com/open-webrtc-toolkit/owt-server-p2p/archive/v4.3.1.tar.gz
RUN mkdir -p /opt/dist//opt/share && \
  cd /opt/dist//opt/share && \
  wget -O - ${OWT_REPO} | tar xz


RUN echo "Start cleanup" && \
    rm -rf /opt/dist//opt/include && \
    rm -rf /opt/dist//opt/share/doc && \
    rm -rf /opt/dist//opt/share/gtk-doc && \
    rm -rf /opt/dist//opt/share/man && \
    ( find /opt/dist -name "*.a" -exec rm -f {} \; ) && \
    echo "Cleanup done"

# Ok, here goes the final image end-user will actually see
FROM base

LABEL vendor="Intel Corporation"

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    npm \
    tree \
    iproute2 \
    sudo \
    wget \
     && \
  rm -rf /var/lib/apt/lists/*

COPY --from=build /opt/dist /
RUN echo "/opt/lib" >> /etc/ld.so.conf.d/all-libs.conf && ldconfig

RUN ls /opt/share/
RUN cd /opt/share/owt-server-p2p-4.3.1 && \
  npm install
EXPOSE 8095
EXPOSE 8096
COPY assets/p2p-alive /usr/bin/

# Create default container user <user>
RUN groupadd -r user && useradd -lrm -s /bin/bash -g user user
RUN usermod -aG sudo user
RUN sed -i -e "s/%sudo.*/%sudo ALL=(ALL) NOPASSWD:ALL/g" /etc/sudoers


# Check running container healthy status with:
#  docker inspect --format="{{json .State.Health}}" <container-id>
HEALTHCHECK CMD /usr/bin/p2p-alive

ENTRYPOINT ["node", "/opt/share/owt-server-p2p-4.3.1/peerserver.js"]


USER user
WORKDIR /home/user
